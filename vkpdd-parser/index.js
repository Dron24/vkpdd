import axios from 'axios';
import * as cheerio from 'cheerio';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import iconv from 'iconv-lite';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const pages = [
  { url: 'https://www.drom.ru/pdd/pdd/', filename: 'TextbookRules.jsx', title: '–ü—Ä–∞–≤–∏–ª–∞ –¥–æ—Ä–æ–∂–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è' },
  { url: 'https://www.drom.ru/pdd/pdd/signs/', filename: 'TextbookSigns.jsx', title: '–î–æ—Ä–æ–∂–Ω—ã–µ –∑–Ω–∞–∫–∏' },
  { url: 'https://www.drom.ru/pdd/pdd/marking/', filename: 'TextbookMarking.jsx', title: '–î–æ—Ä–æ–∂–Ω–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞' },
  { url: 'https://www.drom.ru/pdd/pdd/fault_list/', filename: 'TextbookMalfunctions.jsx', title: '–ü–µ—Ä–µ—á–µ–Ω—å –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π' },
  { url: 'https://www.drom.ru/pdd/pdd/permission/', filename: 'TextbookAdmission.jsx', title: '–î–æ–ø—É—Å–∫ –∫ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏' },
];

const outputDir = path.resolve(__dirname, '../src/panels/textbook');

async function parsePage({ url, filename, title }) {
  console.log(`üì• –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è: ${url}`);

  const response = await axios.get(url, {
    responseType: 'arraybuffer', // –ø–æ–ª—É—á–∞–µ–º —Å—ã—Ä—ã–µ –±–∞–π—Ç—ã
  });

  const decoded = iconv.decode(response.data, 'win1251'); // –¥–µ–∫–æ–¥–∏—Ä—É–µ–º –∫–∞–∫ win1251
  const $ = cheerio.load(decoded);
  const blocks = $('.b-media-cont_margin_b-size-m');

  if (blocks.length === 0) {
    console.error(`‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${url}`);
    return;
  }

  let content = '';
  blocks.each((_, el) => {
    content += $(el).html();
  });

  const cleaned = content
    .replace(/\s+/g, ' ')
    .replace(/<script[\s\S]*?>[\s\S]*?<\/script>/gi, '')
    .replace(/<style[\s\S]*?>[\s\S]*?<\/style>/gi, '')
    .replace(/`/g, '\\`')
    .trim();

  const componentName = filename.replace('.jsx', '');

  const jsx = `
import { Panel, PanelHeader, PanelHeaderBack, Group, Div } from '@vkontakte/vkui';
import { useRouteNavigator } from '@vkontakte/vk-mini-apps-router';

export const ${componentName} = ({ id }) => {
  const navigator = useRouteNavigator();
  return (
    <Panel id={id}>
      <PanelHeader before={<PanelHeaderBack onClick={() => navigator.back()} />}>${title}</PanelHeader>
      <Group>
        <Div>
          <div dangerouslySetInnerHTML={{ __html: \`${cleaned}\` }} />
        </Div>
      </Group>
    </Panel>
  );
};
  `.trim();

  fs.writeFileSync(path.join(outputDir, filename), jsx, 'utf-8');
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${filename}`);
}

(async () => {
  for (const page of pages) {
    try {
      await parsePage(page);
    } catch (e) {
      console.error(`‚ùå –û—à–∏–±–∫–∞: ${page.url}`, e.message);
    }
  }
})();
